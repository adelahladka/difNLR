{
    "collab_server" : "",
    "contents" : "#' Generates binary data set based on Non-Linear Regression model (generalized logistic regression).\n#'\n#' @param N numeric: number of rows representing correspondents.\n#' @param ratio numeric: ratio of number of rows for reference and focal group.\n#' @param parameters numeric: matrix representing with n rows (where n is number of items) and 8 columns\n#' representing true parameters of generalized logistic regression model . See \\strong{Details}.\n#'\n#' @description Generates binary data set based on generalized logistic model.\n#'\n#' @details\n#' The \\code{parameters} is a numeric matrix with 8 columns. First 4 columns represent parameters (a, b, c, d)\n#' of generalized logistic regression model for reference group. Last 4 columns represent differences of\n#' parameters (aDif, bDif, cDif, dDif) of generalized logistic regression model between reference and focal\n#' group. Rows represent items and their number (n) corresponds to number of columns of resultant data set.\n#'\n#' @usage genNLR(N = 1000, ratio = 1, parameters)\n#'\n#' @return\n#' A data.frame containing \\code{N} rows representing correspondents and n+1 columns representing n items.\n#' Last column is group membership variable with coding 0 for reference group and 1 for focal group.\n#'\n#' @author\n#' Adela Drabinova \\cr\n#' Institute of Computer Science, The Czech Academy of Sciences \\cr\n#' Faculty of Mathematics and Physics, Charles University \\cr\n#' adela.drabinova@gmail.com \\cr\n#'\n#' Patricia Martinkova \\cr\n#' Institute of Computer Science, The Czech Academy of Sciences \\cr\n#' martinkova@cs.cas.cz \\cr\n#'\n#' Karel Zvara \\cr\n#' Faculty of Mathematics and Physics, Charles University \\cr\n#'\n#' @references\n#' Drabinova, A. and Martinkova P. (2016). Detection of Differenctial Item Functioning Based on Non-Linear Regression, Technical Report, V-1229, \\url{http://hdl.handle.net/11104/0259498}.\n#'\n#' @examples\n#' \\dontrun{\n#' # seed\n#' set.seed(123)\n#' # generating parameters without DIF, 10 items\n#' parameters <- data.frame(a = runif(10, 0.8, 2),\n#'                          b = rnorm(10),\n#'                          c = runif(10, 0, 0.4),\n#'                          d = 1,\n#'                          aDif = 0, bDif = 0,\n#'                          cDif = 0, dDif = 0)\n#'\n#' # generating data set with 300 observations (150 each group)\n#' genNLR(N = 300, parameters = parameters)\n#'\n#' # generating data set with 300 observations (250 reference group, 50 focal)\n#' genNLR(N = 300, ratio = 5, parameters = parameters)\n#'\n#' }\n#' @export\n\n\ngenNLR <- function(N = 1000, ratio = 1, parameters){\n\n  n <- nrow(parameters)\n  N_R   <- round(N/(ratio + 1)*ratio)\n  N_F   <- round(N/(ratio + 1))\n  group <- c(rep(0, N_R), rep(1, N_F))\n\n  gNLR <- function(x, g, a, b, c, d, aDif, bDif, cDif, dDif){\n    return((c + cDif * g) + ((d + dDif * g) - (c + cDif * g)) / (1 + exp(-(a + aDif * g) * (x - (b + bDif * g)))))\n  }\n\n  theta <- rnorm(N, mean = 0, sd = 1)\n\n\n  pR <- sapply(1:nrow(parameters), function(i)\n    do.call(gNLR, c(list(x = theta[1:N_R], g  = 0), parameters[i, ])))\n  pF <- sapply(1:nrow(parameters), function(i)\n    do.call(gNLR, c(list(x = theta[(N_R + 1):N], g  = 1), parameters[i, ])))\n\n  p <- rbind(pR, pF)\n\n  answer <- matrix(NA, nrow = N, ncol = n)\n  for (j in 1:n) {\n    for (i in 1:N) {\n      answer[i, j] <- rbinom(1, 1, p[i, j])\n    }\n  }\n\n  data <- data.frame(answer, group)\n\n  colnames(data) <- c(paste(\"Item\", seq_along(1:n), sep=\"\"), \"group\")\n  return(data)\n}\n\n",
    "created" : 1484044159557.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4132926111",
    "id" : "A95819FF",
    "lastKnownWriteTime" : 1484045443,
    "last_content_update" : 1484045443004,
    "path" : "~/GitHub/difNLR/R/genNLR.R",
    "project_path" : "R/genNLR.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}